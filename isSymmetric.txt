public boolean isSymmetric(TreeNode root){
         if(root == null){
             //如果是空树就返回false
             return false;
         }
         //判断左右子树对称节点是否为镜像对称
        
         return isMirror(root.left,root.right);
     }

    private boolean isMirror(TreeNode t1, TreeNode t2) {
         if(t1 == null && t2 == null){
             return true;
         }
         if(t1 == null || t2 == null){
             //两者一个为空一个非空即返回
             return false;
         }
         if(t1.val != t2.val ){ //如果两个对称节点值不同也不是镜像对称了
             return false;
         }
         return isMirror(t1.left,t2.right)&& isMirror(t1.right,t2.left); //递归判断左右子树对称节点是否为镜像对称
    }