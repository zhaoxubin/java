/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 import java.util.Queue;
 import java.util.LinkedList;
 import java.util.Collections;
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
           if(root == null){
               return -1;
           }
           if(root.left == null && root.right == null){
               return -1;
           }
           Queue<TreeNode> queue = new LinkedList<>();
           List<Integer> list = new ArrayList<>();
           queue.offer(root);
           while(!queue.isEmpty()){
               TreeNode cur = queue.poll();
               list.add(cur.val);
               if(cur.left != null){
                   queue.offer(cur.left);
               }
               if(cur.right != null){
                   queue.offer(cur.right);
               }
           }
           Collections.sort(list);
           int result = 0;
           int i = 0;
           for(; i < list.size()-1; i++){
             if(list.get(i) != list.get(i+1)){
                 result = list.get(i+1);
                 break;
             }
           }
           if(i == list.size()-1){
               return -1;
           }
           return result;
    }
}