/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
import java.util.Stack;
import java.util.LinkedList;
class Solution {
    List<Integer> list = new LinkedList<>();
    Stack<Node> stack = new Stack<>();
    public List<Integer> preorder(Node root) {
        if(root == null){
            return list;
        }
        stack.push(root);
        while(!stack.isEmpty()){
            Node ret = stack.pop();
            list.add(ret.val);
            List<Node> nodeList = ret.children;
            for(int i = nodeList.size()-1; i >= 0; i--){
               stack.push(nodeList.get(i));
            }
        }
        return list;
    }
}