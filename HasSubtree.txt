

/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public boolean HasSubtree(TreeNode root1,TreeNode root2) {
        if(root1 == null || root2 == null){
            return false;
        }
        boolean result = false;
        if(root1.val == root2.val){
            result = isHasSubtree(root1,root2);
        }
        if(result == false){
             result = HasSubtree(root1.left,root2);
        }
        if(result == false){
             result = HasSubtree(root1.right,root2);
        }
        return result;
    }
    public static boolean isHasSubtree(TreeNode begin,TreeNode beginSub){
        if(beginSub == null){
            return true;
        }
        if(begin == null){
            return false;
        }
        if(begin.val != beginSub.val){
            return false;
        }
        return isHasSubtree(begin.left,beginSub.left)&&isHasSubtree(begin.right,beginSub.right);
    }
}