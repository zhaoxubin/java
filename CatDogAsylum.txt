import java.util.*;
 
public class CatDogAsylum {
    public ArrayList<Integer> asylum(int[][] ope) {
        Queue<Integer> dog=new LinkedList<Integer>();
        Queue<Integer> cat=new LinkedList<Integer>();
        Queue<Integer> all=new LinkedList<Integer>();
        ArrayList<Integer> animal=new ArrayList<Integer>();
        for(int i=0;i<ope.length;i++)
        {
            if(ope[i][0]==1)
            {
                all.add(ope[i][1]);
                if(ope[i][1]>0)
                    dog.add(ope[i][1]);
                else if(ope[i][1]<0)
                    cat.add(ope[i][1]);
            }
            else if(ope[i][0]==2)
            {
                if(ope[i][1]==0)
                {
                    if(!all.isEmpty())
                    {
                        //看最先被领养的是猫还是狗 同步删除猫或狗中的stack
                        int temp=all.poll();
                        animal.add(temp);
                        if(temp>0)
                            dog.poll();
                        else
                            cat.poll();
                    }
                }
                else if(ope[i][1]>0)
                {
                    if(!dog.isEmpty())
                    {
                        //看最先被领养的是猫还是狗 同步删除混合stack中的值
                        int temp=dog.poll();
                        animal.add(temp);
                        all.remove(temp);
                    }
                }
                else
                {
                    if(!cat.isEmpty())
                    {
                        //看最先被领养的是猫还是狗 同步删除混合stack中的值
                        int temp=cat.poll();
                        animal.add(temp);
                        all.remove(temp);
                    }
                }
            }
        }
        return animal;
    }
}